<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jay.mapper.TopdefaultmoviesMapper">
  <resultMap id="BaseMovieResultMap" type="com.jay.po.Movie">
    <constructor>
      <idArg column="movieid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="moviename" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="showyear" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="nation" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="director" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="leadactors" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="screenwriter" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="picture" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="averating" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="numrating" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="description" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="typelist" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="backpost" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <resultMap id="BaseResultMap" type="com.jay.po.Topdefaultmovies">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="movieid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="moviename" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, movieid, moviename
  </sql>
  <select id="selectByExample" parameterType="com.jay.po.TopdefaultmoviesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from topdefaultmovies
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from topdefaultmovies
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from topdefaultmovies
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jay.po.TopdefaultmoviesExample">
    delete from topdefaultmovies
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jay.po.Topdefaultmovies">
    insert into topdefaultmovies (id, movieid, moviename
      )
    values (#{id,jdbcType=INTEGER}, #{movieid,jdbcType=INTEGER}, #{moviename,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jay.po.Topdefaultmovies">
    insert into topdefaultmovies
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="movieid != null">
        movieid,
      </if>
      <if test="moviename != null">
        moviename,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="movieid != null">
        #{movieid,jdbcType=INTEGER},
      </if>
      <if test="moviename != null">
        #{moviename,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jay.po.TopdefaultmoviesExample" resultType="java.lang.Long">
    select count(*) from topdefaultmovies
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update topdefaultmovies
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.movieid != null">
        movieid = #{record.movieid,jdbcType=INTEGER},
      </if>
      <if test="record.moviename != null">
        moviename = #{record.moviename,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update topdefaultmovies
    set id = #{record.id,jdbcType=INTEGER},
      movieid = #{record.movieid,jdbcType=INTEGER},
      moviename = #{record.moviename,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jay.po.Topdefaultmovies">
    update topdefaultmovies
    <set>
      <if test="movieid != null">
        movieid = #{movieid,jdbcType=INTEGER},
      </if>
      <if test="moviename != null">
        moviename = #{moviename,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jay.po.Topdefaultmovies">
    update topdefaultmovies
    set movieid = #{movieid,jdbcType=INTEGER},
      moviename = #{moviename,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectRegDefaultMovie" resultMap="BaseMovieResultMap">
    SELECT  * FROM topdefaultmovies t,movie m WHERE t.movieid=m.movieid limit 10;
  </select>
</mapper>